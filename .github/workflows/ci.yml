# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: ci-test

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:

  test:
    name: Test
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: root
          POSTGRES_PASSWORD: secret
          POSTGRES_DB: simple_bank
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: '1.22.6'
      id: go
    
    - name: Check out code into the go module directory
      uses: actions/checkout@v2

    - name: Install golang-migrate
      run: |
        curl -L https://github.com/golang-migrate/migrate/releases/download/v4.18.2/migrate.linux-amd64.tar.gz | sudo tar -xz -C /usr/bin
        which migrate
    
    - name: run db migration
      run: make migrateup

    - name: setup environment variables in app.env
      run: |
        # echo "DB_DRIVER=${{ secrets.DB_DRIVER }}" >> app.env
        # echo "DB_SOURCE=${{ secrets.DB_SOURCE }}" >> app.env
        # echo "SERVER_ADDRESS=${{ secrets.SERVER_ADDRESS }}" >> app.env
        echo "TOKEN_SYMMETRIC_KEY=${{ secrets.TOKEN_SYMMETRIC_KEY }}" >> app.env
        echo "ACCESS_TOKEN_DURATION=${{ secrets.ACCESS_TOKEN_DURATION }}" >> app.env

    - name: Test
      run: make test
